//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.5.96
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1085 with alias "abstractTopMenu"
	/// <summary>Abstract Top Menu</summary>
	public partial interface IAbstractTopMenu : IPublishedContent
	{
		/// <summary>Light Top Menu</summary>
		bool LightTopMenu { get; }
	}

	/// <summary>Abstract Top Menu</summary>
	[PublishedContentModel("abstractTopMenu")]
	public partial class AbstractTopMenu : PublishedContentModel, IAbstractTopMenu
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "abstractTopMenu";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public AbstractTopMenu(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<AbstractTopMenu, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Light Top Menu: If you are using a dark image or a dark overlay, check this button to make the top menu options appear with light colors on this particular page so that it is visible. If you don't check this option, the default dark options will be used.
		///</summary>
		[ImplementPropertyType("lightTopMenu")]
		public bool LightTopMenu
		{
			get { return GetLightTopMenu(this); }
		}

		/// <summary>Static getter for Light Top Menu</summary>
		public static bool GetLightTopMenu(IAbstractTopMenu that) { return that.GetPropertyValue<bool>("lightTopMenu"); }
	}
}
